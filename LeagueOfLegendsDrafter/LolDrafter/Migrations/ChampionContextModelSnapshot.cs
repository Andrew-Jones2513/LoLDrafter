// <auto-generated />
using LolDrafter;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LolDrafter.Migrations
{
    [DbContext(typeof(ChampionContext))]
    partial class ChampionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LolDrafter.Champion", b =>
                {
                    b.Property<int>("ChampionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChampionID"));

                    b.Property<string>("Abilities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BadMatchup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Build")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChampName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoodMatchup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Positions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChampionID");

                    b.ToTable("Champions");

                    b.HasData(
                        new
                        {
                            ChampionID = 1,
                            Abilities = "q, w, e, r",
                            BadMatchup = "Kled, Jax",
                            Build = "item1, item2, item3",
                            ChampName = "Aatrox",
                            GoodMatchup = "Ramus, Nausus",
                            Positions = "Top, Mid"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
